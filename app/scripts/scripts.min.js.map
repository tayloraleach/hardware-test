{"version":3,"sources":["script.js"],"names":["elem","document","documentElement","getElementById","addEventListener","e","elm","createElement","style","position","id","height","width","top","left","background","target","body","appendChild","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","key","querySelector","keyCode","element","classList","toggle","pressed","displayMask","remove","interval","cpuButton","innerHTML","color","setInterval","console","log","iterations","multiplier","primes","i","candidate","Math","random","isPrime","c","sqrt","push","calculatePrimes","clearInterval","canvas","clear_canvas","ctx","getContext","pos","x","y","setPosition","clientX","getBoundingClientRect","clientY","clearRect","buttons","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","window","innerWidth","innerHeight"],"mappings":"cAAA,WACE,IAAIA,EAAOC,SAASC,gBAgCJD,SAASE,eAAe,oBAEhCC,iBAAiB,QAAS,SAAAC,GAChC,IAAMC,EAAML,SAASM,cAAc,OACnCD,EAAIE,MAAMC,SAAW,WACrBH,EAAII,GAAK,eACTJ,EAAIE,MAAMG,OAAS,OACnBL,EAAIE,MAAMI,MAAQ,OAClBN,EAAIE,MAAMK,IAAM,IAChBP,EAAIE,MAAMM,KAAO,IACjBR,EAAIE,MAAMO,WAAaV,EAAEW,OAAON,GAChCT,SAASgB,KAAKC,YAAYZ,GAxCtBN,EAAKmB,kBACPnB,EAAKmB,oBACInB,EAAKoB,qBAEdpB,EAAKoB,uBACIpB,EAAKqB,wBAEdrB,EAAKqB,0BACIrB,EAAKsB,qBAEdtB,EAAKsB,wBAoCTrB,SAASG,iBAAiB,QAAS,SAAAC,GAEjC,IAAMkB,EAAMtB,SAASuB,cAAT,SAAgCnB,EAAEoB,QAAlC,MACRF,GALU,SAAAG,GAAWA,EAAQC,UAAUC,OAAO,cAMhDC,CAAQN,GAIV,IAAMO,EAAc7B,SAASE,eAAe,gBACxC2B,GACFA,EAAYC,WAIhB,IAAIC,OAAAA,EAGEC,EAAYhC,SAASuB,cAAc,eAsBzCS,EAAU7B,iBAAiB,QAAS,SAAAC,GACR,OAAtBA,EAAEW,OAAOkB,WACX7B,EAAEW,OAAOkB,UACP,yMACF7B,EAAEW,OAAOR,MAAMO,WAAa,MAC5BV,EAAEW,OAAOR,MAAM2B,MAAQ,QACvBH,EAAWI,YAAY,WACrBC,QAAQC,IAAI,cA1BM,SAACC,EAAYC,GAEnC,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAYG,IAAK,CAGnC,IAFA,IAAIC,EAAYD,GAAKF,EAAaI,KAAKC,UACnCC,GAAU,EACLC,EAAI,EAAGA,GAAKH,KAAKI,KAAKL,KAAcI,EAC3C,GAAIJ,EAAYI,GAAM,EAAG,CAEvBD,GAAU,EACV,MAGAA,GACFL,EAAOQ,KAAKN,IAcZO,CAhCa,GACA,MAgCZ,MAEH7C,EAAEW,OAAOkB,UAAY,MACrB7B,EAAEW,OAAOR,MAAMO,WAAa,QAC5BV,EAAEW,OAAOR,MAAM2B,MAAQ,UACvBgB,cAAcnB,MAIlB,IAAMoB,EAASnD,SAASuB,cAAc,yBAChC6B,EAAepD,SAASuB,cAAc,wBACxC8B,EAAMF,EAAOG,WAAW,MACxBC,EAAM,CAAEC,EAAG,EAAGC,EAAG,GAWrB,SAASC,EAAYtD,GACnBmD,EAAIC,EAAIpD,EAAEuD,QAAUR,EAAOS,wBAAwBhD,IACnD2C,EAAIE,EAAIrD,EAAEyD,QAAUV,EAAOS,wBAAwBhD,IAXrDwC,EAAajD,iBAAiB,QAAS,WACrCkD,EAAIS,UAAU,EAAG,EAAGX,EAAOxC,MAAOwC,EAAOzC,UAE3CV,SAASG,iBAAiB,YAW1B,SAAcC,GAEZ,GAAkB,IAAdA,EAAE2D,QAAe,OACrBV,EAAIW,YACJX,EAAIY,UAAY,EAChBZ,EAAIa,QAAU,QACdb,EAAIc,YAAc,OAClBd,EAAIe,OAAOb,EAAIC,EAAGD,EAAIE,GACtBC,EAAYtD,GACZiD,EAAIgB,OAAOd,EAAIC,EAAGD,EAAIE,GACtBJ,EAAIiB,WApBNtE,SAASG,iBAAiB,YAAauD,GACvC1D,SAASG,iBAAiB,aAAcuD,GACxCP,EAAOxC,MAAQ4D,OAAOC,WACtBrB,EAAOzC,OAAS6D,OAAOE,YAvHzB","file":"scripts.min.js","sourcesContent":["(function hardwareTest() {\n  var elem = document.documentElement;\n\n  const openFullscreen = () => {\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  const closeFullscreen = () => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  };\n\n  const display = document.getElementById(\"display-controls\");\n\n  display.addEventListener(\"click\", e => {\n    const elm = document.createElement(\"div\");\n    elm.style.position = \"absolute\";\n    elm.id = \"display-mask\";\n    elm.style.height = \"100%\";\n    elm.style.width = \"100%\";\n    elm.style.top = \"0\";\n    elm.style.left = \"0\";\n    elm.style.background = e.target.id;\n    document.body.appendChild(elm);\n    openFullscreen();\n  });\n\n  const pressed = element => element.classList.toggle(\"pressedkey\");\n\n  document.addEventListener(\"keyup\", e => {\n    // If a valid key, toggle style\n    const key = document.querySelector(`[key=\"${e.keyCode}\"]`);\n    if (key) {\n      pressed(key);\n    }\n\n    // Closes display mask if its open\n    const displayMask = document.getElementById(\"display-mask\");\n    if (displayMask) {\n      displayMask.remove();\n    }\n  });\n\n  let interval;\n  const iterations = 50;\n  const multiplier = 1000000000;\n  const cpuButton = document.querySelector(\".cpu-button\");\n\n  // CPU strain function\n  const calculatePrimes = (iterations, multiplier) => {\n    var primes = [];\n    for (var i = 0; i < iterations; i++) {\n      var candidate = i * (multiplier * Math.random());\n      var isPrime = true;\n      for (var c = 2; c <= Math.sqrt(candidate); ++c) {\n        if (candidate % c === 0) {\n          // not prime\n          isPrime = false;\n          break;\n        }\n      }\n      if (isPrime) {\n        primes.push(candidate);\n      }\n    }\n    return primes;\n  };\n\n  cpuButton.addEventListener(\"click\", e => {\n    if (e.target.innerHTML == \"Run\") {\n      e.target.innerHTML =\n        'STOP <div class=\"lds-spinner\" style=\"pointer-events: none;\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>';\n      e.target.style.background = \"red\";\n      e.target.style.color = \"white\";\n      interval = setInterval(() => {\n        console.log(\"running...\");\n        calculatePrimes(iterations, multiplier);\n      }, 10);\n    } else {\n      e.target.innerHTML = \"Run\";\n      e.target.style.background = \"white\";\n      e.target.style.color = \"#cc0000\";\n      clearInterval(interval);\n    }\n  });\n\n  const canvas = document.querySelector(\".trackpad-test canvas\");\n  const clear_canvas = document.querySelector(\"#clear-canvas-button\");\n  var ctx = canvas.getContext(\"2d\");\n  var pos = { x: 0, y: 0 };\n\n  clear_canvas.addEventListener(\"click\", () => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  });\n  document.addEventListener(\"mousemove\", draw);\n  document.addEventListener(\"mousedown\", setPosition);\n  document.addEventListener(\"mouseenter\", setPosition);\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  function setPosition(e) {\n    pos.x = e.clientX - canvas.getBoundingClientRect().top;\n    pos.y = e.clientY - canvas.getBoundingClientRect().top;\n  }\n\n  function draw(e) {\n    // mouse left button must be pressed\n    if (e.buttons !== 1) return;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"#333\";\n    ctx.moveTo(pos.x, pos.y);\n    setPosition(e);\n    ctx.lineTo(pos.x, pos.y);\n    ctx.stroke();\n  }\n})();\n"]}